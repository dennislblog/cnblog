<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pytorch on My Site Title</title>
    <link>https://dennislblog.github.io/post/pytorch/</link>
    <description>Recent content in Pytorch on My Site Title</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 20 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://dennislblog.github.io/post/pytorch/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tensorboard</title>
      <link>https://dennislblog.github.io/2020/05/_tensorboard/</link>
      <pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dennislblog.github.io/2020/05/_tensorboard/</guid>
      <description>调用方法 1 import torch 2 from torch.autograd import Variable 3 from torch.utils.tensorboard import SummaryWriter 4 5 writer = SummaryWriter(comment=&amp;#34;-test&amp;#34;) 6 with writer: //保证writer调用完关掉 7 writer.method() 8 writer.export_scalars_to_json(&amp;#34;./test.json&amp;#34;) //把scalar信息保存到文件 add_scalar() 在一个图表中记录一</description>
    </item>
    
    <item>
      <title>基本入门</title>
      <link>https://dennislblog.github.io/2020/05/_intro/</link>
      <pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dennislblog.github.io/2020/05/_intro/</guid>
      <description>基础配置 CUDA/GPU运算 1 torch.cuda.get_device_name(0) //&amp;#39;GeForce GTX 1060&amp;#39; 2 torch.cuda.is_available() //判断 GPU 支持 固定随机种子 1 torch.manual_seed(0) 2 torch.cuda.manual_seed_all(0) 3 torch.backends.cudnn.deterministic = True //去除随机性？ 清除GPU存储 1 torch.cuda.empty_cache() //有时Ctrl + C中</description>
    </item>
    
    <item>
      <title>动手深度学习</title>
      <link>https://dennislblog.github.io/2014/04/_cook-book/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://dennislblog.github.io/2014/04/_cook-book/</guid>
      <description>预备知识 Tensor on GPU 用torch.cuda.get_device_name(0)查看主GPU信息，用torch.cuda.is_available</description>
    </item>
    
  </channel>
</rss>